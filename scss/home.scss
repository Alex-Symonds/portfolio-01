@use 'variables' as v;

/* CONTENTS
    This file contains styles specific to the homepage.
        -- || SCSS Variables
        -- || Fonts
        -- || Light beam
        -- || Page layout and nav bar
        -- || text-contents classes
        -- || decorative-contents classes
        -- || Responsive (wider screens)
*/

// || SCSS Variables
$beam_lighting_effect: rgba(#00FFFF, 40%);
$c_core_dark: #98ffff;
$c_core_mid: #ccffff;
$c_core_bright: #f3ffff;

$breakpoint_nav_avoid_inner_beam: 410px;
$breakpoint_nav_avoid_outer_beam: 590px;

// || Fonts
@font-face {
    font-family: "Archi";
    src: url("../fonts/ArchitectsDaughter-Regular.ttf");
} 

@font-face {
    font-family: "Roboto";
    src: url("../fonts/Roboto-Regular.ttf");
} 

@font-face {
    font-family: "Roboto-Bold";
    src: url("../fonts/Roboto-Bold.ttf");
} 

@font-face {
    font-family: "Ubuntu";
    src: url("../fonts/Ubuntu-Regular.ttf");
} 


// || Light beam
/*
    The light beam needs to start from a specific point inside the hero image and extend to the top of the page.
    There are responsive/text-containing elements above the image, so the height of the beam is unknown.

    Solution: have a .beam class to apply the vertical beam as a y-repeating background. Apply the beam class to containers around the 
    responsive elements, allowing it to extend with them as needed. Set 0 margins between these containers so the beam appears continuous.
    Add a "decorative-content" container for the hero image (0 margins again) and, within that, a div for the "start" of the beam: 
    this specific instance of .beam can now have overrides applied to get pixel-defined positioning of the beam relative to the decorative-contents div.

    Then a separate div for the... floor perspective beam.
*/

.beam{
    // Apply the transclucent "outer beam"
    width: 100%;
    background: linear-gradient(90deg, 
                                transparent calc(50% - 135px),
                                $beam_lighting_effect calc(50% - 135px),
                                $beam_lighting_effect calc(50% + 135px),
                                transparent calc(50% + 135px));

    // Apply the "inner core" of the beam
    position: relative;
    &::before{
        content: "";
        display: block;
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;

        background-image: url("../images/kaboom-beam-only-narrow.png");
        background-repeat: repeat-y;
        background-position: center top;
    }    
}

.decorative-contents .beam{
    // This .beam is special: it covers from the bottom of the last responsive .beam to where 
    // the beam-source image is displayed.
    position: absolute;             // relative messes up the decorative-contents layout and, fortunately, is unnecessary in this instance
    height: 230px;                  // this makes it end in a nicely hidden spot
}

.beam-on-floor{
    /*
        This class is:
            1) Creating the perspective effect for the "bottom" of the outer beam
            2) Fading from that beam to transparent (so the outer beam colour doesn't end abruptly)

        Height of 183px and a trapezoid clip-path (top-corner positions based on the outer beam; bottom-corner positions based on 
        50% +/- 780px) results in a nice perspective angle for the beam, but it undesirably cuts off the radial gradient at the bottom.

        Solution: 6-point clip-path to add a rectangle underneath the trapezoid: this allows space for the gradient to fade out nicely.
    */

    display: block;
    position: absolute;
    left: 0;
    width: 100%;
    height: 400px;          // = 183px for the diagonals + whatever-looks-nice for the gradient rectangle

    top: 230px; // match this to ".decorative-contents .beam{ height:" to adjust height at which outer beam angles outwards.

    background: radial-gradient(ellipse at center 5px, #006666 320px, transparent 600px);
    background-position: center top;    // these background-* settings are used to adjust the appearance of the radial gradient.
    background-size: 1920px 380px;      // <- extra important. It makes the ellipse landscape instead of vertical.
    background-repeat: no-repeat;

    /*
        Clip-path points explanation:
        ----------------------------------------------------------------------------------------------------------------------------------------
        calc(50% +/- 135px) 0           =       points at the top of the trapezoid (i.e. connection to outer beam)
        calc(50% +/- 780px) 183px       =       points at the bottom of the trapezoid AND the top of the fadey rectangle
        calc(50% +/- 780px) 100%        =       points at the bottom of the fadey rectangle
    */
    clip-path: polygon(
        calc(50% - 135px) 0,
        calc(50% + 135px) 0,
        calc(50% + 780px) 183px,
        calc(50% + 780px) 100%,
        calc(50% - 780px) 100%,
        calc(50% - 780px) 183px
    );

}



// || Page layout and nav bar
.whole-page-container{
    position: relative;
    width: 100%;

    // On narrow screens the background pic may not fill the screen vertically. Set the background colour to change from the "normal" colour to black, hiding where the PNG ends.   
    background: url("../images/monster-bg-wrap.svg"), linear-gradient(180deg, #303030 635px, black 635px);
    background-size: 1282px auto;

    background-position: -40px 0;
    background-repeat: no-repeat;
    

    overflow: hidden;   // Prevent "artistic" divs exceeding their bounds and causing unwanted scroll bars.
}

.nav-bar{
    position: relative;
    z-index: 3;
    border-bottom: none;

    background: rgba(#000, 65%);    // The nav bar overlaps the bright beam, so this makes it show up a bit
}

nav a{
    &:hover,
    &:focus{
        background: rgba(v.$c_outer_beam, 95%);
    }
}


.page-contents{
    display: flex;
    flex-direction: column;
    align-items: center;
}


// || text-contents classes
.text-contents{
    display: flex;
    flex-direction: column;
    align-items: center;

    width: 100%;
    padding: 0.3rem 0 0 0;
}

.heading-container{
    display: flex;
    flex-direction: column;
    align-items: center; 

    width: auto;
    max-width: none;
    border-bottom: none;

    margin-top: 1rem;

    img{
        position: relative;
        z-index: 2;
    }

    h1{
        padding-bottom: 0;
    }
}

h1{
    position: relative;
    z-index: 3;

    margin: 0.3rem 0 0 0;
    padding: 0 0.5rem 3px;

    background: white;
    border-radius: 1.2rem;

    font-family: Archi, Verdana, Geneva, Tahoma, sans-serif;

    font-size: 1.8rem;
    color: transparent;

    background: white;
    background: url("../images/name1.svg");
    background-size: cover;
    background-repeat: no-repeat;
}


.subheading{
    position: relative;
    top: -0.25rem;
    z-index: 2;
    
    width: 98%;
    padding: 0.1rem 0.7rem;

    font-size: 1.2rem;
    font-family: Ubuntu, Verdana, Geneva, Tahoma, sans-serif;
    
    color: black;

    border: 1px solid rgba(white, 10%);
    border-width: 1px 0;
    background: linear-gradient(90deg, transparent 0%, rgba(white, 95%) 30%, rgba(white, 95%) 70%, transparent 100%);
}

.tagline-container{
    position: relative;
    z-index: 2;
    width: 70%;
    max-width: 253px;

    p{
        text-align: center;
        margin: 1.8rem 0 0 0;
        padding: 0.5rem 0.75rem; 
        font-size: 1rem;

        color: white;
        font-family: Roboto, Verdana, Geneva, Tahoma, sans-serif;

        background: rgba(#111, 90%);

        emphasis{
            font-family: Roboto-Bold, Verdana, Geneva, Tahoma, sans-serif;
        }
    }
    
}

.cta-container{
    position: relative;
    z-index: 2;
    margin-top: 1rem;

    a{
        display: inline-block;
        background: linear-gradient(50deg, #181818 20%, #282828 95%);
        border: 3px solid white;
        border-radius: 2.3rem;

        padding: 0.70rem 1.75rem;

        font-size: 1.3rem;
        font-family: Roboto, Verdana, Geneva, Tahoma, sans-serif;
        color: white;

        box-shadow: inset 0 0 10px 2px rgba(#ccffff, 40%);

        &:hover,
        &:focus{
            background: transparent;
            color: black;
            border-color: white;
            box-shadow: inset 0 0 15px 2px rgba(rgb(25, 225, 225), 20%),
                        0 0 10px 6px rgba(rgb(255, 255, 255), 80%);
        }
    }
}


// || decorative-contents classes
.decorative-contents{
    display: flex;
    flex-direction: column;
    align-items: center;

    width: 100%;

    position: relative;
}

.hero-container{
    display: flex;
    flex-direction: column;
    align-items: center;

    margin-top: 40px;

    width: 100%;
    max-width: 100%;

    box-sizing: border-box;
    overflow: hidden;

    position: relative;

    height: 400px;

    .beam-source{
        position: absolute;
        z-index: 2;

        top: 60px;
    }

    .me-rune-container{
        position: relative;
        margin-top: 85px;

        .me{
            position: relative;
            z-index: 3;
            left: 4px;

            width: 221px;
            height: auto;
        }

        .rune-container{
            perspective: 450px;

            .rune{
                position: absolute;
                top: -30px;
                left: -78px;
                transform: rotateX(90deg);

                width: 375px;
                height: auto;
            }
        }
    }

    .dissolver-lefty{
        position: absolute;
        top: 20px;
        left: calc(50% - 145px);
        z-index: 2;
    }
    .dissolver-righty{
        position: absolute;
        top: 0;
        right: calc(50% - 175px);
        z-index: 2;
    }

}


// || Responsive
// Prevent nav links from overlapping the inner beam.
@media screen and (min-width: $breakpoint_nav_avoid_inner_beam){
    nav{
        width: 100%;
        justify-content: space-between;
        
        a{
            max-width: calc(50% - 78px + 0.5px);    // = half screen; less half inner beam; plus 0.5 to placate the God of Rounding on odd-numbered screens.


            &:hover,
            &:focus{
                background: rgba(v.$c_outer_beam, 95%);
            }

        }
    }
}

// Prevent nav links from overlapping outer beam too: on hover, make them blend with it instead.
@media screen and (min-width: $breakpoint_nav_avoid_outer_beam){
    .nav-bar{
        background: none;
        height: max(2rem, 50px);
    }

    nav{
        width: 100%;

        a{
            font-size: 1.2rem;
            height: max(2rem, 50px);
            padding: 0.8rem 2rem 0;

            &:hover,
            &:focus{
                border-color: transparent;
            }


            &:first-of-type{
                text-align: right;
                max-width: calc(50% - 135px - 0.5px);   // = half screen; less half the outer beam width; less 0.5px to placate the God of Rounding on odd-numbered screen widths.
                
                &:hover,
                &:focus{
                    background: linear-gradient(270deg, $beam_lighting_effect 70%, transparent 100%);
                }
            }

            &:last-of-type{
                text-align: left;
                max-width: calc(50% - 135px + 0.5px); // = half screen; less half the outer beam width; plus 0.5px to placate the God of Rounding on odd-numbered screen widths.

                &:hover,
                &:focus{
                    background: linear-gradient(90deg, $beam_lighting_effect 70%, transparent 100%);
                }
            }
        }
    }
}

// Go to "wide mode": bigger pictures, bigger text, use the two sides of the outer beam as visual containers for the two nav bar links.
@media screen and (min-width: v.$breakpoint_wide_screen){
    // || Responsive: Light beam
    .beam{
        background: linear-gradient(90deg, 
                                    transparent calc(50% - 320px),
                                    rgba(#00FFFF, 40%) calc(50% - 320px),
                                    rgba(#00FFFF, 40%) calc(50% + 320px),
                                    transparent calc(50% + 320px));
    

        &::before{
            background-image: url("../images/kaboom-beam-only-wide.png");
            background-size: 220px auto;
        }    
    }
    .decorative-contents{
        .beam{
            height: 240px; // match this to ".beam-on-floor{ top:" to adjust height at which outer beam angles outwards.

            &::before{
                background-repeat: no-repeat;
                background-size: 220px 180px;   // x value to match "normal" .beam::before; y value set by eye to sit nicely in hero image
            }
        }
    }
    .beam-on-floor{
        top: 239px; // (almost) match this to ".decorative-contents .beam{ height:" to adjust height at which outer beam angles outwards.

        clip-path: polygon(
            calc(50% - 320px) 0,
            calc(50% + 320px) 0,
            calc(50% + 900px) 183px,
            calc(50% + 900px) 100%,
            calc(50% - 900px) 100%,
            calc(50% - 900px) 183px
        );

    }

    // || Responsive: Page layout and nav bar
    .whole-page-container{
        background-position: calc(50% + 80px) top;
        background-repeat: repeat-x;
        background-size: 1688px auto;

        position: relative;
        &::after{
            display: block;
            content: '';

            position: absolute;
            top: 0;
            left: calc(50% - 844px + 80px);
            
            background: url("../images/dissolver-overlay-wrapper.png");

            background-size: 1688px 844px;
            width: 1688px;
            height: 844px;
        }
    }

    .nav-bar{
        height: 3rem;
    }
    
    nav{
        justify-content: space-between;
        width: 640px;

        a{
            font-size: 1.4rem;
            height: 3rem;
            width: 210px; // this should fill the "outer beam" area on wide-mode
            max-width: none;
            padding: 0.6rem 0 0; 

            &:first-of-type,
            &:last-of-type{
                padding: 0.6rem 0 0;
                text-align: center;
                max-width: none;

                &:hover,
                &:focus{
                    outline: transparent solid 1px;
                    background: rgba(#fff, 30%);
                    border-bottom: 3px solid v.$c_core_dark;
                }

            }
        }
    }

    // || Responsive: text-contents
    .heading-container{
        img{
            width: 134px;
        }
    }

    h1{
        font-size: 3rem;
        z-index: 3;
    }

    .subheading{
        top: -0.6rem;
        font-size: 1.7rem;
    }

    .tagline-container{
        max-width: 523px;
        p{
            margin: 1.5rem 0 0 0;
            padding: 1rem 1.75rem; 
            font-size: 1.4rem;
            line-height: 2rem;
        }  
    }

    .cta-container{
        margin-top: 1.5rem;
        z-index: 3;
    
        a{
            border-radius: 4rem;
            padding: 0.8rem 2.4rem;
            font-size: 1.8rem;

            &:hover,
            &:focus{
                box-shadow: inset 0 0 15px 2px rgba(rgb(25, 225, 225), 20%),
                            0 0 15px 15px rgba(rgb(255, 255, 255), 80%);
            }
        }
    }


    // || Responsive: decorative-contents
    .hero-container{
        margin-top: 38px;
        width: 100%;

        overflow: visible;
    
        .beam-source{
            top: 10px;
            img{
                width: 220px;
            }
        }
        .me-rune-container{
            margin-top: 40px;

            .rune-container{
                perspective: 650px;

                .rune{
                    top: -30px;
                    left: -95px;
                    transform: rotateX(90deg);

                    width: 490px;
                    height: auto;
                }
            }

            .me{
                width: 300px;
                height: auto;
            }
        }
        .dissolver-lefty{
            top: 0;
            left: calc(50% - 295px);
            width: 160px;
        }
        .dissolver-righty{
            top: -70px;
            right: calc(50% - 340px);
            width: 200px;  
        }
    }
}




